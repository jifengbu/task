#!/bin/bash

source ~/command/common
ip="120.25.96.74"
password=88164657YHrt
remote_root=/root/nodejs/server/
_oper=0
_name=""
_localpath="./"
_remotepath="${remote_root}"

function xssh_enter()
{
	expect -c "
    set timeout 30000;
		spawn ssh root@${ip};
		expect {
            \"*password:\" {send \"${password}\r\"; exp_continue}
            \"*#\" {send \" cd  ${remote_root}\rPS1=\'\\\u@\\\w\\\n$\'\r\"}
		}
		interact
	"
}

function xssh_update_code()
{
	expect -c "
    set timeout 30000;
		spawn scp -r "dist/${_name}.tar.gz" "root@${ip}:${remote_root}/${_name}/${_name}.tar.gz"
		expect {
			\"*password:\" {send \"${password}\r\"}
		}
		interact
    "
	expect -c "
    set timeout 30000;
		spawn ssh root@${ip};
		expect {
            \"*password:\" {send \"${password}\r\"; exp_continue}
            \"*#\" {send \" cd  ${remote_root}/${_name}\rrm -fr public\rtar zxf ${_name}.tar.gz\rrm -f ${_name}.tar.gz\rpm2 restart ${_name} --update-env\rexit\r\"}
		}
		interact
	"
}

function xssh_push()
{
	[ -z "${_localpath}" ]&&return
	expect -c "
    set timeout 30000;
		spawn scp -r "${_localpath}" "root@${ip}:${_remotepath}"
		expect {
			\"*password:\" {send \"${password}\r\"}
		}
		interact
	"
}

function xssh_pull()
{
	[ -z "${_localpath}" ]&&return
	expect -c "
    set timeout 30000;
		spawn scp -r "root@${ip}:${_remotepath}" "${_localpath}"
		expect {
			\"*password:\" {send \"${password}\r\"}
		}
		interact
	"
}

function show_help()
{
	local -a list
	list="xssh"
	list=("${list[@]}" "Usage :xssh [-s|-l|-u|-h]")
	list=("${list[@]}" "xssh:login ssh")
	list=("${list[@]}" "xssh -u [name]: update project code [server/admin/cardm/cardb]")
	list=("${list[@]}" "xssh -s [local:remote]:push local file/dir to ssh server")
	list=("${list[@]}" "xssh -l [remote:local]:pull remote file/dir from ssh server to local")
	list=("${list[@]}" "xssh -h:show help")
	__msgbox "${list[@]}"
}


function main()
{
	while getopts :s:l:u:h opt;do
		case ${opt} in
			u)_oper=1; _name="$OPTARG";;
			s)_oper=2;_localpath="${OPTARG%%:*}";_remotepath="${OPTARG##*:}";;
			l)_oper=3;_remotepath="${OPTARG%%:*}";_localpath="${OPTARG##*:}";;
			*)show_help;exit;;
		esac
	done
    if ! [ "${_localpath:0:1}" = "/" -o "${_localpath:0:1}" = "~" ];then
        _localpath="./${_localpath}"
    fi
    if ! [ "${_remotepath:0:1}" = "/" -o "${_remotepath:0:1}" = "~" ];then
        _remotepath="${remote_root}${_remotepath}"
    fi

	case ${_oper} in
		0)xssh_enter;;
		1)xssh_update_code;;
		2)xssh_push;;
		3)xssh_pull;;
	esac
}

main "$@"
